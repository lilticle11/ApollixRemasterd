do local Rayfield=loadstring(game:HttpGet("https://sirius.menu/rayfield"))();local Window=Rayfield:CreateWindow({Name="ApollixREMSTRD",Icon=0,LoadingTitle="Apollix",LoadingSubtitle="by Celestial/Recently",ShowText="APLX",Theme="Amethyst",ToggleUIKeybind="K",DisableRayfieldPrompts=false,DisableBuildWarnings=false,ConfigurationSaving={Enabled=true,FolderName=IDKman,FileName="ApollixCOnfig"},Discord={Enabled=false,Invite="noinvitelink",RememberJoins=true},KeySystem=false,KeySettings={Title="Untitled",Subtitle="Key System",Note="No method of obtaining the key is provided",FileName="Key",SaveKey=true,GrabKeyFromSite=false,Key={"Hello"}}});local PlayerTab=Window:CreateTab("Player",nil);local Section=PlayerTab:CreateSection("Movement");local UIS=game:GetService("UserInputService");local Players=game:GetService("Players");local player=Players.LocalPlayer;local jumpingEnabled=false;local Toggle=PlayerTab:CreateToggle({Name="Infinite Jump",CurrentValue=false,Flag="Toggle1",Callback=function(Value) jumpingEnabled=Value;end});UIS.JumpRequest:Connect(function() if jumpingEnabled then player.Character:FindFirstChildOfClass("Humanoid"):ChangeState(Enum.HumanoidStateType.Jumping);end end);local Players=game:GetService("Players");local player=Players.LocalPlayer;local function findPlayerByPartialName(partial) partial=partial:lower();for _,p in ipairs(Players:GetPlayers()) do if (p.Name:lower():find(partial) or p.DisplayName:lower():find(partial)) then return p;end end return nil;end local Input=PlayerTab:CreateInput({Name="Teleport to Player",CurrentValue="",PlaceholderText="Enter part of username or display name",RemoveTextAfterFocusLost=false,Flag="Input_Teleport",Callback=function(Text) local targetPlayer=findPlayerByPartialName(Text);if (targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")) then local myChar=player.Character or player.CharacterAdded:Wait() ;local myHRP=myChar:WaitForChild("HumanoidRootPart");local targetHRP=targetPlayer.Character.HumanoidRootPart;myHRP.CFrame=targetHRP.CFrame + Vector3.new(2,0,2) ;else warn("No player found with that name or display name.");end end});local Players=game:GetService("Players");local player=Players.LocalPlayer;local function findPlayerByPartialName(partial) partial=partial:lower();for _,p in ipairs(Players:GetPlayers()) do if ((p~=player) and (p.Name:lower():find(partial) or p.DisplayName:lower():find(partial))) then return p;end end return nil;end local Input=PlayerTab:CreateInput({Name="Bring Player(s) to You",CurrentValue="",PlaceholderText="Enter name or 'all'",RemoveTextAfterFocusLost=false,Flag="Input_BringPlayer",Callback=function(Text) local myChar=player.Character or player.CharacterAdded:Wait() ;local myHRP=myChar:WaitForChild("HumanoidRootPart");if (Text:lower()=="all") then for _,targetPlayer in ipairs(Players:GetPlayers()) do if ((targetPlayer~=player) and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")) then local targetHRP=targetPlayer.Character.HumanoidRootPart;targetHRP.CFrame=myHRP.CFrame + Vector3.new(math.random( -5,5),0,math.random( -5,5)) ;end end else local targetPlayer=findPlayerByPartialName(Text);if (targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart")) then local targetHRP=targetPlayer.Character.HumanoidRootPart;targetHRP.CFrame=myHRP.CFrame + Vector3.new(2,0,2) ;else warn("Player not found or not ready.");end end end});local Players=game:GetService("Players");local player=Players.LocalPlayer;local Slider=PlayerTab:CreateSlider({Name="WalkSpeed",Range={16,200},Increment=1,Suffix="Speed",CurrentValue=16,Flag="Slider_WalkSpeed",Callback=function(Value) local character=player.Character or player.CharacterAdded:Wait() ;local humanoid=character:WaitForChild("Humanoid");humanoid.WalkSpeed=Value;end});local Players=game:GetService("Players");local player=Players.LocalPlayer;local normalWalkSpeed=16;local normalJumpHeight=7.2;local superWalkSpeed=100;local superJumpHeight=100;local Toggle=PlayerTab:CreateToggle({Name="Superhuman Mode",CurrentValue=false,Flag="Toggle_Superhuman",Callback=function(enabled) local character=player.Character or player.CharacterAdded:Wait() ;local humanoid=character:WaitForChild("Humanoid");if enabled then humanoid.WalkSpeed=superWalkSpeed;humanoid.JumpHeight=superJumpHeight;else humanoid.WalkSpeed=normalWalkSpeed;humanoid.JumpHeight=normalJumpHeight;end end});local Players=game:GetService("Players");local player=Players.LocalPlayer;local originalColors={};local function setCharacterColor(character,color) for _,part in pairs(character:GetDescendants()) do if part:IsA("BasePart") then if  not originalColors[part] then originalColors[part]=part.Color;end part.Color=color;elseif (part:IsA("Decal") or part:IsA("Texture")) then part.Transparency=1;elseif part:IsA("Accessory") then local handle=part:FindFirstChild("Handle");if (handle and  not originalColors[handle]) then originalColors[handle]=handle.Color;handle.Color=color;end end end end local function restoreColors() for part,color in pairs(originalColors) do if (part and part.Parent) then part.Color=color;if (part:IsA("Decal") or part:IsA("Texture")) then part.Transparency=0;end end end originalColors={};end local Toggle=PlayerTab:CreateToggle({Name="No rights/All black",CurrentValue=false,Flag="Toggle_Blackout",Callback=function(enabled) local character=player.Character or player.CharacterAdded:Wait() ;if enabled then setCharacterColor(character,Color3.new(0,0,0));else restoreColors();end end});local Players=game:GetService("Players");local player=Players.LocalPlayer;local character=player.Character or player.CharacterAdded:Wait() ;local humanoid=character:WaitForChild("Humanoid");local fallDamageDisabled=false;local lastHealth=humanoid.Health;local function onHealthChanged(newHealth) if fallDamageDisabled then if (newHealth<lastHealth) then humanoid.Health=lastHealth;else lastHealth=newHealth;end else lastHealth=newHealth;end end local function onCharacterAdded(char) character=char;humanoid=character:WaitForChild("Humanoid");lastHealth=humanoid.Health;humanoid.HealthChanged:Connect(onHealthChanged);end player.CharacterAdded:Connect(onCharacterAdded);humanoid.HealthChanged:Connect(onHealthChanged);local toggle=PlayerTab:CreateToggle({Name="Disable Fall Damage",CurrentValue=false,Flag="Toggle_DisableFallDamage",Callback=function(value) fallDamageDisabled=value;if value then lastHealth=humanoid.Health;end end});local Players=game:GetService("Players");local player=Players.LocalPlayer;local character=player.Character or player.CharacterAdded:Wait() ;local humanoid=character:WaitForChild("Humanoid");local godModeEnabled=false;local lastHealth=humanoid.Health;local function onHealthChanged(newHealth) if godModeEnabled then if (newHealth<lastHealth) then humanoid.Health=lastHealth;else lastHealth=newHealth;end else lastHealth=newHealth;end end local function onCharacterAdded(char) character=char;humanoid=character:WaitForChild("Humanoid");lastHealth=humanoid.Health;humanoid.HealthChanged:Connect(onHealthChanged);end player.CharacterAdded:Connect(onCharacterAdded);humanoid.HealthChanged:Connect(onHealthChanged);local toggle=PlayerTab:CreateToggle({Name="God Mode",CurrentValue=false,Flag="Toggle_GodMode",Callback=function(value) godModeEnabled=value;if value then lastHealth=humanoid.Health;end end});local OPTab=Window:CreateTab("OP",nil);local Section=OPTab:CreateSection("Laggers");local Players=game:GetService("Players");local RunService=game:GetService("RunService");local player=Players.LocalPlayer;local glitchEnabled=false;local glitchConnections={};local STUTTER_TIME=0.9;local CYCLE_TIME=1;local function startGlitchForPlayer(otherPlayer) if glitchConnections[otherPlayer] then return;end if (otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart")) then local hrp=otherPlayer.Character.HumanoidRootPart;local lastCFrame=hrp.CFrame;local elapsedTime=0;local freezing=false;glitchConnections[otherPlayer]=RunService.Heartbeat:Connect(function(dt) if ( not glitchEnabled or  not otherPlayer.Character or  not otherPlayer.Character:FindFirstChild("HumanoidRootPart")) then glitchConnections[otherPlayer]:Disconnect();glitchConnections[otherPlayer]=nil;return;end elapsedTime=elapsedTime + dt ;local cyclePos=elapsedTime%CYCLE_TIME ;if (cyclePos<STUTTER_TIME) then if  not freezing then freezing=true;lastCFrame=hrp.CFrame;end hrp.CFrame=lastCFrame;else freezing=false;end end);end end local function startGlitch() for _,otherPlayer in pairs(Players:GetPlayers()) do if (otherPlayer~=player) then startGlitchForPlayer(otherPlayer);end end end local function stopGlitch() for _,conn in pairs(glitchConnections) do if conn then conn:Disconnect();end end glitchConnections={};end Players.PlayerAdded:Connect(function(newPlayer) if glitchEnabled then newPlayer.CharacterAdded:Connect(function() startGlitchForPlayer(newPlayer);end);end end);local Toggle=OPTab:CreateToggle({Name="Lag All",CurrentValue=false,Flag="Toggle_GlitchFreeze",Callback=function(value) glitchEnabled=value;if glitchEnabled then startGlitch();else stopGlitch();end end});local Players=game:GetService("Players");local RunService=game:GetService("RunService");local UserInputService=game:GetService("UserInputService");local player=Players.LocalPlayer;local camera=workspace.CurrentCamera;local mouse=player:GetMouse();local glitchEnabled=false;local holdingClick=false;local currentTarget=nil;local glitchConnection=nil;local STUTTER_TIME=0.9;local CYCLE_TIME=1;local tracerPart=Instance.new("Part");tracerPart.Anchored=true;tracerPart.CanCollide=false;tracerPart.Transparency=1;tracerPart.Size=Vector3.new(0.2,0.2,0.2);tracerPart.Name="GlitchTracer";tracerPart.Parent=workspace;local attachment0=Instance.new("Attachment",camera);local attachment1=Instance.new("Attachment",tracerPart);local beam=Instance.new("Beam");beam.Attachment0=attachment0;beam.Attachment1=attachment1;beam.Width0=0.1;beam.Width1=0.1;beam.FaceCamera=true;beam.Enabled=false;beam.Parent=camera;local function getPlayerFromPart(part) local model=part and part:FindFirstAncestorWhichIsA("Model") ;if model then return Players:GetPlayerFromCharacter(model);end end local function startGlitchForPlayer(targetPlayer) if glitchConnection then glitchConnection:Disconnect();glitchConnection=nil;end if ( not targetPlayer or  not targetPlayer.Character) then return;end local hrp=targetPlayer.Character:FindFirstChild("HumanoidRootPart");if  not hrp then return;end local lastCFrame=hrp.CFrame;local elapsedTime=0;local freezing=false;glitchConnection=RunService.Heartbeat:Connect(function(dt) if ( not glitchEnabled or  not holdingClick or (currentTarget~=targetPlayer)) then if glitchConnection then glitchConnection:Disconnect();glitchConnection=nil;end return;end if ( not targetPlayer.Character or  not targetPlayer.Character:FindFirstChild("HumanoidRootPart")) then if glitchConnection then glitchConnection:Disconnect();glitchConnection=nil;end return;end hrp=targetPlayer.Character.HumanoidRootPart;elapsedTime=elapsedTime + dt ;local cyclePos=elapsedTime%CYCLE_TIME ;if (cyclePos<STUTTER_TIME) then if  not freezing then lastCFrame=hrp.CFrame;freezing=true;end hrp.CFrame=lastCFrame;else freezing=false;end end);end local function clearTarget() if glitchConnection then glitchConnection:Disconnect();glitchConnection=nil;end currentTarget=nil;holdingClick=false;end UserInputService.InputBegan:Connect(function(input,gameProcessed) if gameProcessed then return;end if ((input.UserInputType==Enum.UserInputType.MouseButton1) and glitchEnabled) then holdingClick=true;local targetPlayer=getPlayerFromPart(mouse.Target);if (targetPlayer and (targetPlayer~=player)) then currentTarget=targetPlayer;startGlitchForPlayer(currentTarget);end end end);UserInputService.InputEnded:Connect(function(input,gameProcessed) if gameProcessed then return;end if (input.UserInputType==Enum.UserInputType.MouseButton1) then holdingClick=false;clearTarget();end end);RunService.RenderStepped:Connect(function() if  not glitchEnabled then beam.Enabled=false;currentTarget=nil;return;end local beamColor=Color3.new(1,0,0);local targetPos=nil;if (currentTarget and currentTarget.Character and currentTarget.Character:FindFirstChild("HumanoidRootPart")) then targetPos=currentTarget.Character.HumanoidRootPart.Position;beamColor=Color3.new(0,1,0);else local hoveringPlayer=getPlayerFromPart(mouse.Target);if (hoveringPlayer and (hoveringPlayer~=player) and mouse.Target) then targetPos=mouse.Target.Position;beamColor=Color3.new(0,1,0);elseif mouse.Hit then targetPos=mouse.Hit.Position;beamColor=Color3.new(1,0,0);else beam.Enabled=false;return;end end tracerPart.Position=targetPos;beam.Color=ColorSequence.new(beamColor);beam.Enabled=true;end);local Toggle=OPTab:CreateToggle({Name="Lag gun",CurrentValue=false,Flag="Toggle_GlitchLock",Callback=function(value) glitchEnabled=value;if  not value then clearTarget();beam.Enabled=false;end end});local Section=OPTab:CreateSection("Crashers");local Players=game:GetService("Players");local RunService=game:GetService("RunService");local player=Players.LocalPlayer;local glitchEnabled=false;local glitchConnections={};local STUTTER_TIME=30;local CYCLE_TIME=1;local function startGlitchForPlayer(otherPlayer) if glitchConnections[otherPlayer] then return;end if (otherPlayer.Character and otherPlayer.Character:FindFirstChild("HumanoidRootPart")) then local hrp=otherPlayer.Character.HumanoidRootPart;local lastCFrame=hrp.CFrame;local elapsedTime=0;local freezing=false;glitchConnections[otherPlayer]=RunService.Heartbeat:Connect(function(dt) if ( not glitchEnabled or  not otherPlayer.Character or  not otherPlayer.Character:FindFirstChild("HumanoidRootPart")) then glitchConnections[otherPlayer]:Disconnect();glitchConnections[otherPlayer]=nil;return;end elapsedTime=elapsedTime + dt ;local cyclePos=elapsedTime%CYCLE_TIME ;if (cyclePos<STUTTER_TIME) then if  not freezing then freezing=true;lastCFrame=hrp.CFrame;end hrp.CFrame=lastCFrame;else freezing=false;end end);end end local function startGlitch() for _,otherPlayer in pairs(Players:GetPlayers()) do if (otherPlayer~=player) then startGlitchForPlayer(otherPlayer);end end end local function stopGlitch() for _,conn in pairs(glitchConnections) do if conn then conn:Disconnect();end end glitchConnections={};end Players.PlayerAdded:Connect(function(newPlayer) if glitchEnabled then newPlayer.CharacterAdded:Connect(function() startGlitchForPlayer(newPlayer);end);end end);local Toggle=OPTab:CreateToggle({Name="Crash All",CurrentValue=false,Flag="Toggle_GlitchFreeze",Callback=function(value) glitchEnabled=value;if glitchEnabled then startGlitch();else stopGlitch();end end});local Players=game:GetService("Players");local RunService=game:GetService("RunService");local UserInputService=game:GetService("UserInputService");local player=Players.LocalPlayer;local camera=workspace.CurrentCamera;local mouse=player:GetMouse();local glitchEnabled=false;local holdingClick=false;local currentTarget=nil;local glitchConnection=nil;local STUTTER_TIME=30;local CYCLE_TIME=1;local tracerPart=Instance.new("Part");tracerPart.Anchored=true;tracerPart.CanCollide=false;tracerPart.Transparency=1;tracerPart.Size=Vector3.new(0.2,0.2,0.2);tracerPart.Name="GlitchTracer";tracerPart.Parent=workspace;local attachment0=Instance.new("Attachment",camera);local attachment1=Instance.new("Attachment",tracerPart);local beam=Instance.new("Beam");beam.Attachment0=attachment0;beam.Attachment1=attachment1;beam.Width0=0.1;beam.Width1=0.1;beam.FaceCamera=true;beam.Enabled=false;beam.Parent=camera;local function getPlayerFromPart(part) local model=part and part:FindFirstAncestorWhichIsA("Model") ;if model then return Players:GetPlayerFromCharacter(model);end end local function startGlitchForPlayer(targetPlayer) if glitchConnection then glitchConnection:Disconnect();glitchConnection=nil;end if ( not targetPlayer or  not targetPlayer.Character) then return;end local hrp=targetPlayer.Character:FindFirstChild("HumanoidRootPart");if  not hrp then return;end local lastCFrame=hrp.CFrame;local elapsedTime=0;local freezing=false;glitchConnection=RunService.Heartbeat:Connect(function(dt) if ( not glitchEnabled or  not holdingClick or (currentTarget~=targetPlayer)) then if glitchConnection then glitchConnection:Disconnect();glitchConnection=nil;end return;end if ( not targetPlayer.Character or  not targetPlayer.Character:FindFirstChild("HumanoidRootPart")) then if glitchConnection then glitchConnection:Disconnect();glitchConnection=nil;end return;end hrp=targetPlayer.Character.HumanoidRootPart;elapsedTime=elapsedTime + dt ;local cyclePos=elapsedTime%CYCLE_TIME ;if (cyclePos<STUTTER_TIME) then if  not freezing then lastCFrame=hrp.CFrame;freezing=true;end hrp.CFrame=lastCFrame;else freezing=false;end end);end local function clearTarget() if glitchConnection then glitchConnection:Disconnect();glitchConnection=nil;end currentTarget=nil;holdingClick=false;end UserInputService.InputBegan:Connect(function(input,gameProcessed) if gameProcessed then return;end if ((input.UserInputType==Enum.UserInputType.MouseButton1) and glitchEnabled) then holdingClick=true;local targetPlayer=getPlayerFromPart(mouse.Target);if (targetPlayer and (targetPlayer~=player)) then currentTarget=targetPlayer;startGlitchForPlayer(currentTarget);end end end);UserInputService.InputEnded:Connect(function(input,gameProcessed) if gameProcessed then return;end if (input.UserInputType==Enum.UserInputType.MouseButton1) then holdingClick=false;clearTarget();end end);RunService.RenderStepped:Connect(function() if  not glitchEnabled then beam.Enabled=false;currentTarget=nil;return;end local beamColor=Color3.new(1,0,0);local targetPos=nil;if (currentTarget and currentTarget.Character and currentTarget.Character:FindFirstChild("HumanoidRootPart")) then targetPos=currentTarget.Character.HumanoidRootPart.Position;beamColor=Color3.new(0,1,0);else local hoveringPlayer=getPlayerFromPart(mouse.Target);if (hoveringPlayer and (hoveringPlayer~=player) and mouse.Target) then targetPos=mouse.Target.Position;beamColor=Color3.new(0,1,0);elseif mouse.Hit then targetPos=mouse.Hit.Position;beamColor=Color3.new(1,0,0);else beam.Enabled=false;return;end end tracerPart.Position=targetPos;beam.Color=ColorSequence.new(beamColor);beam.Enabled=true;end);local Toggle=OPTab:CreateToggle({Name="Crash gun",CurrentValue=false,Flag="Toggle_GlitchLock",Callback=function(value) glitchEnabled=value;if  not value then clearTarget();beam.Enabled=false;end end});local Section=OPTab:CreateSection("Other");local Players=game:GetService("Players");local RunService=game:GetService("RunService");local slowMotionEnabled=false;local slowFactor=0.1;local function setPlayerSlowMotion(player,enabled) local character=player.Character;if  not character then return;end local humanoid=character:FindFirstChildOfClass("Humanoid");if  not humanoid then return;end for _,track in pairs(humanoid:GetPlayingAnimationTracks()) do track:AdjustSpeed((enabled and slowFactor) or 1 );end humanoid.WalkSpeed=(enabled and (8 * slowFactor)) or 16 ;end local function applySlowMotionToAll() for _,player in pairs(Players:GetPlayers()) do if (player~=Players.LocalPlayer) then setPlayerSlowMotion(player,true);end end end local function resetSlowMotionToAll() for _,player in pairs(Players:GetPlayers()) do if (player~=Players.LocalPlayer) then setPlayerSlowMotion(player,false);end end end local connection;local function toggleSlowMotion(enabled) slowMotionEnabled=enabled;if enabled then connection=RunService.Heartbeat:Connect(function() applySlowMotionToAll();end);else if connection then connection:Disconnect();connection=nil;end resetSlowMotionToAll();end end Players.PlayerAdded:Connect(function(player) player.CharacterAdded:Connect(function() wait(1);if (slowMotionEnabled and (player~=Players.LocalPlayer)) then setPlayerSlowMotion(player,true);end end);end);Players.LocalPlayer.CharacterAdded:Connect(function() if slowMotionEnabled then wait(1);toggleSlowMotion(true);end end);local Toggle=OPTab:CreateToggle({Name="Slow Motion All",CurrentValue=false,Flag="ToggleSlowMotion",Callback=function(Value) toggleSlowMotion(Value);end});local Players=game:GetService("Players");local RunService=game:GetService("RunService");local LocalPlayer=Players.LocalPlayer;local frozenPositions={};local freezeEnabled=false;local heartbeatConnection;local function freezePlayer(player,enabled) local character=player.Character;if  not character then return;end local humanoid=character:FindFirstChildOfClass("Humanoid");local hrp=character:FindFirstChild("HumanoidRootPart");if ( not humanoid or  not hrp) then return;end if enabled then frozenPositions[player]=hrp.CFrame;humanoid.WalkSpeed=0;humanoid.JumpPower=0;for _,track in pairs(humanoid:GetPlayingAnimationTracks()) do track:AdjustSpeed(0);end humanoid.AnimationPlayed:Connect(function(track) if freezeEnabled then track:AdjustSpeed(0);end end);else frozenPositions[player]=nil;humanoid.WalkSpeed=16;humanoid.JumpPower=50;for _,track in pairs(humanoid:GetPlayingAnimationTracks()) do track:AdjustSpeed(1);end end end local function applyFreezeToAll() for _,player in pairs(Players:GetPlayers()) do if (player~=LocalPlayer) then freezePlayer(player,true);end end end local function removeFreezeFromAll() for _,player in pairs(Players:GetPlayers()) do if (player~=LocalPlayer) then freezePlayer(player,false);end end end local function startFreeze() applyFreezeToAll();heartbeatConnection=RunService.Heartbeat:Connect(function() for player,cf in pairs(frozenPositions) do local character=player.Character;if (character and character:FindFirstChild("HumanoidRootPart")) then character.HumanoidRootPart.CFrame=cf;character.HumanoidRootPart.Velocity=Vector3.new(0,0,0);character.HumanoidRootPart.AssemblyLinearVelocity=Vector3.new(0,0,0);character.HumanoidRootPart.AssemblyAngularVelocity=Vector3.new(0,0,0);local humanoid=character:FindFirstChildOfClass("Humanoid");if humanoid then for _,track in pairs(humanoid:GetPlayingAnimationTracks()) do track:AdjustSpeed(0);end end end end end);end local function stopFreeze() if heartbeatConnection then heartbeatConnection:Disconnect();heartbeatConnection=nil;end removeFreezeFromAll();end local Toggle=OPTab:CreateToggle({Name="Freeze All Players[BUGGY]",CurrentValue=false,Flag="ToggleFreezeAll",Callback=function(value) freezeEnabled=value;if value then startFreeze();else stopFreeze();end end});local VsTab=Window:CreateTab("Visuals",nil);local Section=VsTab:CreateSection("Esp");local Players=game:GetService("Players");local RunService=game:GetService("RunService");local camera=workspace.CurrentCamera;local player=Players.LocalPlayer;local espBoxes={};local function createBox() local box=Drawing.new("Square");box.Color=Color3.new(1,0,0);box.Thickness=2;box.Transparency=1;box.Filled=false;box.Visible=false;return box;end local function getBoundingBoxPoints(character) local parts={};for _,partName in ipairs({"Head","HumanoidRootPart","LeftFoot","RightFoot","LeftHand","RightHand"}) do local part=character:FindFirstChild(partName);if part then table.insert(parts,part);end end if ( #parts==0) then return nil;end local minX,minY,maxX,maxY;for _,part in ipairs(parts) do local pos,onScreen=camera:WorldToViewportPoint(part.Position);if onScreen then if ( not minX or (pos.X<minX)) then minX=pos.X;end if ( not maxX or (pos.X>maxX)) then maxX=pos.X;end if ( not minY or (pos.Y<minY)) then minY=pos.Y;end if ( not maxY or (pos.Y>maxY)) then maxY=pos.Y;end end end if  not minX then return nil;end return Vector2.new(minX,minY),Vector2.new(maxX,maxY);end local function updateBox(box,topLeft,bottomRight) local size=bottomRight-topLeft ;box.Position=Vector2.new(topLeft.X,topLeft.Y);box.Size=Vector2.new(size.X,size.Y);box.Visible=true;end local function removeBox(box) box.Visible=false;box:Remove();end local espEnabled=false;local function onPlayerAdded(plr) local box=createBox();espBoxes[plr]=box;end local function onPlayerRemoving(plr) if espBoxes[plr] then espBoxes[plr]:Remove();espBoxes[plr]=nil;end end for _,plr in pairs(Players:GetPlayers()) do if (plr~=player) then onPlayerAdded(plr);end end Players.PlayerAdded:Connect(function(plr) if ((plr~=player) and espEnabled) then onPlayerAdded(plr);end end);Players.PlayerRemoving:Connect(function(plr) onPlayerRemoving(plr);end);RunService.RenderStepped:Connect(function() if  not espEnabled then for _,box in pairs(espBoxes) do box.Visible=false;end return;end for plr,box in pairs(espBoxes) do local character=plr.Character;if (character and character:FindFirstChild("Humanoid") and (character.Humanoid.Health>0)) then local topLeft,bottomRight=getBoundingBoxPoints(character);if (topLeft and bottomRight) then updateBox(box,topLeft,bottomRight);else box.Visible=false;end else box.Visible=false;end end end);local Toggle=VsTab:CreateToggle({Name="2d box esp",CurrentValue=false,Flag="Toggle_PlayerBoxESP",Callback=function(value) espEnabled=value;if  not value then for _,box in pairs(espBoxes) do box.Visible=false;end else for _,plr in pairs(Players:GetPlayers()) do if ((plr~=player) and  not espBoxes[plr]) then onPlayerAdded(plr);end end end end});local Players=game:GetService("Players");local RunService=game:GetService("RunService");local camera=workspace.CurrentCamera;local player=Players.LocalPlayer;local skeletonLines={};local joints={{"Head","UpperTorso"},{"UpperTorso","LowerTorso"},{"UpperTorso","LeftUpperArm"},{"LeftUpperArm","LeftLowerArm"},{"LeftLowerArm","LeftHand"},{"UpperTorso","RightUpperArm"},{"RightUpperArm","RightLowerArm"},{"RightLowerArm","RightHand"},{"LowerTorso","LeftUpperLeg"},{"LeftUpperLeg","LeftLowerLeg"},{"LeftLowerLeg","LeftFoot"},{"LowerTorso","RightUpperLeg"},{"RightUpperLeg","RightLowerLeg"},{"RightLowerLeg","RightFoot"}};local function createLine() local line=Drawing.new("Line");line.Color=Color3.new(1,0,0);line.Thickness=2;line.Transparency=1;line.Visible=false;return line;end local function getJointPosition(character,jointName) local part=character and character:FindFirstChild(jointName) ;if part then local pos,onScreen=camera:WorldToViewportPoint(part.Position);return Vector2.new(pos.X,pos.Y),onScreen;end return nil,false;end local function setupSkeletonForPlayer(plr) skeletonLines[plr]={};for _=1, #joints do table.insert(skeletonLines[plr],createLine());end end local function removeSkeletonForPlayer(plr) if skeletonLines[plr] then for _,line in pairs(skeletonLines[plr]) do line.Visible=false;line:Remove();end skeletonLines[plr]=nil;end end local espEnabled=false;local function onPlayerAdded(plr) if (plr~=player) then setupSkeletonForPlayer(plr);end end local function onPlayerRemoving(plr) removeSkeletonForPlayer(plr);end for _,plr in pairs(Players:GetPlayers()) do onPlayerAdded(plr);end Players.PlayerAdded:Connect(onPlayerAdded);Players.PlayerRemoving:Connect(onPlayerRemoving);RunService.RenderStepped:Connect(function() if  not espEnabled then for _,lines in pairs(skeletonLines) do for _,line in pairs(lines) do line.Visible=false;end end return;end for plr,lines in pairs(skeletonLines) do local character=plr.Character;if (character and character:FindFirstChild("Humanoid") and (character.Humanoid.Health>0)) then for i,jointPair in ipairs(joints) do local startPos,startOnScreen=getJointPosition(character,jointPair[1]);local endPos,endOnScreen=getJointPosition(character,jointPair[2]);if (startOnScreen and endOnScreen) then lines[i].From=startPos;lines[i].To=endPos;lines[i].Visible=true;else lines[i].Visible=false;end end else for _,line in pairs(lines) do line.Visible=false;end end end end);local Toggle=VsTab:CreateToggle({Name="Skeleton ESP",CurrentValue=false,Flag="Toggle_SkeletonESP",Callback=function(value) espEnabled=value;if  not value then for _,lines in pairs(skeletonLines) do for _,line in pairs(lines) do line.Visible=false;end end end end});local Players=game:GetService("Players");local RunService=game:GetService("RunService");local camera=workspace.CurrentCamera;local player=Players.LocalPlayer;local nameTags={};local function createNameTag() local textLabel=Drawing.new("Text");textLabel.Size=18;textLabel.Color=Color3.new(1,1,1);textLabel.Center=true;textLabel.Outline=true;textLabel.OutlineColor=Color3.new(0,0,0);textLabel.Visible=false;return textLabel;end local function updateNameTag(nameTag,character,displayName) local head=character:FindFirstChild("Head");if  not head then nameTag.Visible=false;return;end local pos,onScreen=camera:WorldToViewportPoint(head.Position + Vector3.new(0,2.5,0) );if onScreen then nameTag.Position=Vector2.new(pos.X,pos.Y);nameTag.Text=displayName;nameTag.Visible=true;else nameTag.Visible=false;end end local function setupNameTagForPlayer(plr) if (plr==player) then return;end local tag=createNameTag();nameTags[plr]=tag;end local function removeNameTagForPlayer(plr) if nameTags[plr] then nameTags[plr].Visible=false;nameTags[plr]:Remove();nameTags[plr]=nil;end end local espEnabled=false;local function onPlayerAdded(plr) if (plr~=player) then setupNameTagForPlayer(plr);end end local function onPlayerRemoving(plr) removeNameTagForPlayer(plr);end for _,plr in pairs(Players:GetPlayers()) do onPlayerAdded(plr);end Players.PlayerAdded:Connect(onPlayerAdded);Players.PlayerRemoving:Connect(onPlayerRemoving);RunService.RenderStepped:Connect(function() if  not espEnabled then for _,tag in pairs(nameTags) do tag.Visible=false;end return;end for plr,tag in pairs(nameTags) do local character=plr.Character;if (character and character:FindFirstChild("Humanoid") and (character.Humanoid.Health>0)) then local displayName=plr.DisplayName or plr.Name ;updateNameTag(tag,character,displayName);else tag.Visible=false;end end end);local Toggle=VsTab:CreateToggle({Name="Name Tag ESP",CurrentValue=false,Flag="Toggle_NameTagESP",Callback=function(value) espEnabled=value;if  not value then for _,tag in pairs(nameTags) do tag.Visible=false;end end end});local Players=game:GetService("Players");local RunService=game:GetService("RunService");local camera=workspace.CurrentCamera;local player=Players.LocalPlayer;local distanceTexts={};local distanceESPEnabled=false;local function createDistanceText() local text=Drawing.new("Text");text.Size=16;text.Color=Color3.new(1,1,1);text.Center=true;text.Outline=true;text.OutlineColor=Color3.new(0,0,0);text.Visible=false;return text;end local function updateDistanceText(plr) local character=plr.Character;if  not character then return;end local head=character:FindFirstChild("Head");if  not head then return;end local pos,onScreen=camera:WorldToViewportPoint(head.Position + Vector3.new(0,2.5,0) );if onScreen then local dist=(player.Character and player.Character:FindFirstChild("HumanoidRootPart") and (head.Position-player.Character.HumanoidRootPart.Position).Magnitude) or 0 ;distanceTexts[plr].Position=Vector2.new(pos.X,pos.Y);distanceTexts[plr].Text=string.format("%.0f studs",dist);distanceTexts[plr].Visible=true;else distanceTexts[plr].Visible=false;end end local function setupPlayer(plr) if (plr==player) then return;end if  not distanceTexts[plr] then distanceTexts[plr]=createDistanceText();end end local function removePlayer(plr) if distanceTexts[plr] then distanceTexts[plr].Visible=false;distanceTexts[plr]:Remove();distanceTexts[plr]=nil;end end for _,plr in pairs(Players:GetPlayers()) do setupPlayer(plr);end Players.PlayerAdded:Connect(function(plr) setupPlayer(plr);end);Players.PlayerRemoving:Connect(function(plr) removePlayer(plr);end);RunService.RenderStepped:Connect(function() if  not distanceESPEnabled then for _,distText in pairs(distanceTexts) do distText.Visible=false;end return;end for plr in pairs(distanceTexts) do updateDistanceText(plr);end end);local distanceToggle=VsTab:CreateToggle({Name="Distance ESP",CurrentValue=false,Flag="Toggle_DistanceESP",Callback=function(value) distanceESPEnabled=value;if  not value then for _,distText in pairs(distanceTexts) do distText.Visible=false;end end end});local Players=game:GetService("Players");local RunService=game:GetService("RunService");local camera=workspace.CurrentCamera;local player=Players.LocalPlayer;local healthTexts={};local healthESPEnabled=false;local function createHealthText() local text=Drawing.new("Text");text.Size=16;text.Color=Color3.new(0,1,0);text.Center=true;text.Outline=true;text.OutlineColor=Color3.new(0,0,0);text.Visible=false;return text;end local function updateHealthText(plr) local character=plr.Character;if  not character then return;end local humanoid=character:FindFirstChildOfClass("Humanoid");local head=character:FindFirstChild("Head");if ( not humanoid or  not head) then return;end local health=math.floor(humanoid.Health);local maxHealth=math.floor(humanoid.MaxHealth);local pos,onScreen=camera:WorldToViewportPoint(head.Position + Vector3.new(0,2.5,0) );if onScreen then healthTexts[plr].Position=Vector2.new(pos.X,pos.Y);healthTexts[plr].Text=health   .. " / "   .. maxHealth ;healthTexts[plr].Visible=true;else healthTexts[plr].Visible=false;end end local function setupPlayer(plr) if (plr==player) then return;end if  not healthTexts[plr] then healthTexts[plr]=createHealthText();end end local function removePlayer(plr) if healthTexts[plr] then healthTexts[plr].Visible=false;healthTexts[plr]:Remove();healthTexts[plr]=nil;end end for _,plr in pairs(Players:GetPlayers()) do setupPlayer(plr);end Players.PlayerAdded:Connect(function(plr) setupPlayer(plr);end);Players.PlayerRemoving:Connect(function(plr) removePlayer(plr);end);RunService.RenderStepped:Connect(function() if  not healthESPEnabled then for _,text in pairs(healthTexts) do text.Visible=false;end return;end for plr in pairs(healthTexts) do updateHealthText(plr);end end);local healthToggle=VsTab:CreateToggle({Name="Health ESP ",CurrentValue=false,Flag="Toggle_HealthESP_Text",Callback=function(value) healthESPEnabled=value;if  not value then for _,text in pairs(healthTexts) do text.Visible=false;end end end});local SndTab=Window:CreateTab("Sound",nil);local Section=SndTab:CreateSection("Sound stuff");local Button=SndTab:CreateButton({Name="Play Vineboom",Callback=function() local sound=Instance.new("Sound");sound.SoundId="rbxassetid://6308606116";sound.Volume=20;sound.PlayOnRemove=false;sound.Parent=game.Players.LocalPlayer:WaitForChild("PlayerGui");sound:Play();sound.Ended:Connect(function() sound:Destroy();end);end}); end
